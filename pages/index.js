import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.scss";
import menuStyles from "@/components/menu.module.scss";
import Slider from "@/components/Slider";
import { useEffect, useRef, useState } from "react";
import { client } from "../libs/client";
import { css } from "@emotion/react";
import Link from "next/link";
import Menu from "@/components/menu";
import { useRouter } from "next/router";
import variable from "../styles/_var.module.scss";

export default function Home({ works }) {
  const router = useRouter();
  // const [imgPreset, setImagePreset] = useState("");
  const [imgPreset, setImagePreset] = useState(works.photos[0].img);
  const [slideNum, setSlideNum] = useState(1);
  const [controler, setControler] = useState("1");
  const [viewWidth, setViewWidth] = useState(0);

  const [menuState, setMenuState] = useState(false);
  const onResizeFunc = () => {
    setViewWidth(window.innerWidth);
    if (viewWidth < variable.breakpoint) console.log("aaa");
  };
  useEffect(() => {
    onResizeFunc();
    menu_toggle_function();
    window.addEventListener("resize", onResizeFunc);
  }, []);

  function menu_toggle_function() {
    console.log(menuState);
    const menuItem = document.getElementById("sp_menu");
    console.log(getComputedStyle(menuItem).left);
    if (menuState) {
      menuItem.style.top = "0%";
      menuItem.style.background = "#fefefe";
      menuItem.classList.add(menuStyles["menu--open"]);
      document.getElementsByTagName("html")[0].style.overflow = "hidden";
      document
        .getElementById("open-button")
        .classList.add(styles["open-button-exe-animTotop"]);
      document
        .getElementById("close-button")
        .classList.add(styles["close-button-exe-animTotop"]);
    } else {
      menuItem.style.top = "100%";
      menuItem.style.background = "#fefefe";
      menuItem.classList.remove(menuStyles["menu--open"]);
      console.log(document.getElementsByTagName("html"));
      document.getElementsByTagName("html")[0].style.overflow = "auto";
      document
        .getElementById("open-button")
        .classList.remove(styles["open-button-exe-animTotop"]);
      document
        .getElementById("close-button")
        .classList.remove(styles["close-button-exe-animTotop"]);
    }
  }
  useEffect(() => {
    menu_toggle_function();
  }, [menuState]);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        {viewWidth < 767 ? (
          <>
            <div>
              <div
                className="logo"
                css={css`
                  width: 100%;
                  height: 100px;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                `}
              >
                <a>DAIKI KATO</a>
              </div>
              <Menu
                works={works}
                imgPreset={imgPreset}
                setImagePreset={setImagePreset}
                slideNum={slideNum}
                setSlideNum={setSlideNum}
                controler={controler}
                router={router}
                id="sp_menu"
                setMenuState={setMenuState}
              ></Menu>
              <></>
              <section className={styles["slide"]}>
                <Slider
                  viewWidth={viewWidth}
                  imgPreset={imgPreset}
                  setImagePreset={setImagePreset}
                  setSlideNum={setSlideNum}
                  setControler={setControler}
                />
              </section>
            </div>

            <button
              id="open-button"
              className={styles["sp-menu__button"]}
              onClick={() => {
                // menu_toggle_function();
                setMenuState(!menuState);
              }}
            >
              <div className={styles["sp-menu__stroke"]}></div>
              <div className={styles["sp-menu__stroke"]}></div>
              <div className={styles["sp-menu__stroke"]}></div>
            </button>
            <button
              id="close-button"
              className={`${styles["sp-menu__button"]} ${styles["sp-menu--close"]}`}
              onClick={() => {
                // menu_toggle_function();
                setMenuState(!menuState);
              }}
            >
              <div className={styles["sp-menu__stroke__close1"]}></div>
              <div className={styles["sp-menu__stroke__close2"]}></div>
            </button>
          </>
        ) : (
          <>
            <Menu
              works={works}
              imgPreset={imgPreset}
              setImagePreset={setImagePreset}
              slideNum={slideNum}
              setSlideNum={setSlideNum}
              controler={controler}
              router={router}
              id="pc_menu"
              setMenuState={setMenuState}
            ></Menu>
            <section className={styles["slide"]}>
              <Slider
                viewWidth={viewWidth}
                imgPreset={imgPreset}
                setImagePreset={setImagePreset}
                setSlideNum={setSlideNum}
                setControler={setControler}
              />
            </section>
          </>
        )}
      </main>
    </>
  );
}
export const getStaticProps = async () => {
  const data = await client
    .get({ endpoint: "works" })
    .then((res) => {
      return res;
    })
    .catch((err) => {
      console.log(err);
    });

  return {
    props: {
      works: data,
    },
  };
};
